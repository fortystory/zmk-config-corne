/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp DEL>;
            key-positions = <11 41>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E      &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D      &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp LALT
                         &kp LCTRL  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LGUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC    &kp N1    &kp N2             &kp N3     &kp N4        &kp N5       &kp N6      &kp N7      &kp N8            &kp N9      &kp N0         &kp BSPC
&kp TAB    &kp PLUS  &kp MINUS          &kp STAR   &kp FSLH      &kp EQUAL    &kp LEFT    &kp DOWN    &kp UP_ARROW      &kp RIGHT   &kp PAGE_UP    &kp HOME
&kp LSHFT  &trans    &kp C_VOLUME_DOWN  &trans     &kp C_VOL_UP  &trans       &kp C_MUTE  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp PAGE_DOWN  &kp END
                                        &kp LCTRL  &trans        &kp SPACE    &kp RET     &trans      &kp LGUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC    &kp EXCL   &kp AT  &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp TAB    &kp TILDE  &kp F5  &kp F6     &kp F7    &kp F8       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &trans
&kp LSHFT  &kp GRAVE  &kp F1  &kp F2     &kp F3    &kp F4       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp LALT
                              &kp LCTRL  &trans    &kp SPACE    &kp RET    &trans     &kp LGUI
            >;
        };

        both_layer {
            bindings = <
&trans  &kp F10  &kp F7  &kp F8  &kp F9  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans    &trans        &trans        &trans        &trans        &trans        &trans
&trans  &kp F12  &kp F1  &kp F2  &kp F3  &trans    &trans        &trans        &trans        &trans        &trans        &trans
                         &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
